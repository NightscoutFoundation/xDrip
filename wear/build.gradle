apply plugin: 'com.android.application'
//apply from: '../app/token-replace.gradle'
apply from: '../common.gradle'

android {
    compileSdkVersion 29
    lintOptions {
        checkReleaseBuilds false
//        abortOnError false
    }
    defaultConfig {
        applicationId "com.eveningoutpost.dexdrip"
        minSdkVersion 21
        //noinspection ExpiredTargetSdkVersion
        targetSdkVersion 23
        versionCode 1
        versionName generateVersionName()
        buildConfigField "int", "buildVersion", generateVersionNumberString()
        buildConfigField "String", "buildUUID", generateRandomUUID()
        buildConfigField "long", "buildTimestamp", generateTimestamp()
        buildConfigField "int", "targetSDK", targetSdkVersion.mApiLevel.toString()

        applicationId = "com.eveningoutpost.dexdrip"
        resValue "string", "label_xdrip", "XDrip"
        resValue "string", "label_xdrip_large", "XDrip(Large)"
        resValue "string", "label_xdrip_big_chart", "XDrip(BigChart)"
        resValue "string", "label_xdrip_circle", "XDrip(Circle)"
        resValue "string", "label_xdrip_activity", "XDrip Prefs."
        resValue "string", "app_settings", "XDrip Settings"
        resValue "string", "build_version_name", "Version: $versionName"
    }

    // The defaultConfig values above are fixed, so your incremental builds don't
    // need to rebuild the manifest (and therefore the whole APK, slowing build times).
    // But for release builds, it's okay. So the following script iterates through
    // all the known variants, finds those that are "release" build types, and
    // changes those properties to something dynamic.
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.each { output ->
                output.versionNameOverride = generateVersionName()
            }
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }

    flavorDimensions "version"
    productFlavors {
        // When building a variant that uses this flavor, the following configurations
        // override those in the defaultConfig block.
        fast {
            // To avoid using legacy multidex when building from the command line,
            // set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,
            // the build automatically avoids legacy multidex when deploying to a device running
            // API level 21 or higherâ€”regardless of what you set as your minSdkVersion.
            minSdkVersion 21
            versionNameSuffix "-dev"
            buildConfigField "int", "buildVersion", "2021010100"
            buildConfigField "String", "buildUUID", "\"0f79a60a-5616-99be-8eb1-a430edcfd9fe\""
            buildConfigField "long", "buildTimestamp", "1609459200L"
            resConfigs "en", "xxhdpi"
        }

        prod {
            // If you've configured the defaultConfig block for the release version of
            // your app, you can leave this block empty and Gradle uses configurations in
            // the defaultConfig block instead. You still need to create this flavor.
            // Otherwise, all variants use the "dev" flavor configurations.
        }
    }
}

allprojects {
    repositories {
        flatDir {
            dirs 'libs', '../app/libs'
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    compileOnly 'com.google.android.wearable:wearable:2.5.0'
    implementation 'com.google.android.support:wearable:2.5.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    // FIX upgrade to play-services-wearable:17.0.0 requires upgrade to AndroidX libraries, https://developers.google.com/android/guides/releases#june_17_2019
    implementation 'com.google.android.gms:play-services-wearable:10.2.1'
    implementation 'com.squareup.wire:wire-runtime:2.2.0'
    //implementation 'com.ustwo.android:clockwise-wearable:1.0.2'
    implementation(name: 'ustwo-clockwise-debug', ext: 'aar')
    implementation(name: 'wearpreferenceactivity-0.5.0', ext: 'aar')
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.tananaev:adblib:1.3'

    implementation(name: 'thread-safe-active-android-3.1.1', ext: 'aar')
    implementation 'com.google.guava:guava:24.1-jre'
    implementation 'io.reactivex:rxjava:1.3.3'
    implementation 'com.polidea.rxandroidble2:rxandroidble:1.12.1'
    implementation 'org.apache.commons:commons-math3:3.6'
    testImplementation "org.robolectric:robolectric:4.2.1"
    testImplementation 'junit:junit:4.13.2'
    testImplementation "com.google.truth:truth:1.1.3"

    // add missing JAXB dependencies for JDK 9+
    if (JavaVersion.current().ordinal() >= JavaVersion.VERSION_1_9.ordinal()) {
        annotationProcessor 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'
    }

    implementation 'uk.com.robust-it:cloning:1.9.5'
    // you will want to install the android studio lombok plugin
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok"
    // use lombok in unit tests
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}
